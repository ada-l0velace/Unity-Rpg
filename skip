[33mcommit 59b4284d4daf0af3a4d25d524bb83e48e050f252[m
Author: Ricardo Jo√£o Silva <kewry.dev@gmail.com>
Date:   Thu Jul 23 07:43:39 2015 +0100

    ahh shit?

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex f970e66..924292a 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -36,11 +36,6 @@[m [mFallout Rpg/[Tt]humbs.db[m
 # ========== #[m
 [m
 .venv/[m
[32m+[m[32m.venb/[m
 .directory/[m
[31m-[m
[31m-# ========= #[m
[31m-#    SSH    #[m
[31m-# ========= #[m
[31m-[m
[31m-falloutSSH[m
[31m-falloutSSH.pub[m
\ No newline at end of file[m
[32m+[m[32m.ssh/[m
\ No newline at end of file[m
[1mdiff --git a/Fallout Rpg/Assets/Resources/Prefab/NPC.prefab b/Fallout Rpg/Assets/Resources/Prefab/NPC.prefab[m
[1mindex 6d2bf65..e4382ae 100644[m
[1m--- a/Fallout Rpg/Assets/Resources/Prefab/NPC.prefab[m	
[1m+++ b/Fallout Rpg/Assets/Resources/Prefab/NPC.prefab[m	
[36m@@ -30,7 +30,7 @@[m [mTransform:[m
   m_GameObject: {fileID: 170634}[m
   m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}[m
   m_LocalPosition: {x: 0, y: 0, z: 0}[m
[31m-  m_LocalScale: {x: 1, y: 1, z: 1}[m
[32m+[m[32m  m_LocalScale: {x: .600000024, y: 1, z: .600000024}[m
   m_Children: [][m
   m_Father: {fileID: 0}[m
   m_RootOrder: 0[m
[36m@@ -132,6 +132,14 @@[m [mPrefab:[m
       propertyPath: m_Materials.Array.data[0][m
       value: [m
       objectReference: {fileID: 2100000, guid: 543d5d2896ac2914fba07fbd2b8a65a2, type: 2}[m
[32m+[m[32m    - target: {fileID: 0}[m
[32m+[m[32m      propertyPath: m_LocalScale.x[m
[32m+[m[32m      value: .600000024[m
[32m+[m[32m      objectReference: {fileID: 0}[m
[32m+[m[32m    - target: {fileID: 0}[m
[32m+[m[32m      propertyPath: m_LocalScale.z[m
[32m+[m[32m      value: .600000024[m
[32m+[m[32m      objectReference: {fileID: 0}[m
     m_RemovedComponents: [][m
   m_ParentPrefab: {fileID: 0}[m
   m_RootGameObject: {fileID: 170634}[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/BattleControl.cs b/Fallout Rpg/Assets/Scripts/Battle/BattleControl.cs[m
[1mindex da7cb17..02e512d 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/BattleControl.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/BattleControl.cs[m	
[36m@@ -23,7 +23,7 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
 [m
 [m
 [m
[31m-    public void init(int mapHeight, int mapWidth, GridSquareMouseOver grid, Orientation orientation, AStarNode[,] nodes = null) {[m
[32m+[m[32m    public void init(int mapHeight, int mapWidth, GridSquareMouseOver grid, CellShape orientation, AStarNode[,] nodes = null) {[m
         Debug.Log("Preparing the battlefield...");[m
         _astar = new AStar(mapHeight, mapWidth, orientation, nodes);[m
         _ai = new AIControl();[m
[36m@@ -47,7 +47,8 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
         _turnOrder = new List<Unit>();[m
         _turnNumber = _currentTurn = 0;[m
         addUnit(FriendlyDummy, new Vector2Int(1, 1), 12, Faction.Player, true);[m
[31m-        addUnit(EnemyDummy, new Vector2Int(10, 10), 6, Faction.Enemy, false);[m
[32m+[m[32m        addUnit(EnemyDummy, new Vector2Int(9, 9), 6, Faction.Enemy, false);[m
[32m+[m[32m        addUnit(EnemyDummy, new Vector2Int(8, 8), 6, Faction.Enemy, false);[m
 [m
         _turnLenght = _currentTurn = _turnOrder.Count;[m
         _ai.init(_faction, _turnOrder, _astar, this);[m
[36m@@ -102,7 +103,7 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
         Vector2Int lastPos = path[path.Count - 1];[m
         if (_astar.isNodeOpen(lastPos)) {[m
             _astar.giveUnit(lastPos, _currentUnit.node.FetchUnit);[m
[31m-            _currentUnit.runAnimation(BattleActions.Move, path);[m
[32m+[m[32m            _currentUnit.runAnimation(BattleActions.Move, path, OnMoveAnimationCompleted);[m
             _grid.playerLock("TileClicked.");[m
             /* BLOCKED FOR ANIMATION CODING[m
              * CHANGE AFTERWARDS[m
[36m@@ -118,6 +119,12 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
         return false;[m
     }[m
 [m
[32m+[m[32m    private void OnMoveAnimationCompleted() {[m
[32m+[m[32m        //missing position adjustment[m
[32m+[m[41m        [m
[32m+[m[32m        nextTurn("End of Move Animation.");[m
[32m+[m[32m    }[m
[32m+[m
     /// <summary>[m
     /// Use Vector2Int version instead[m
     /// </summary>[m
[36m@@ -128,7 +135,7 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
         Vector2Int lastPos = path[path.Count - 1];[m
         if (_astar.isNodeOpen(lastPos)) {[m
             _astar.giveUnit(lastPos, _currentUnit.node.FetchUnit);[m
[31m-            _currentUnit.runAnimation(BattleActions.Move, path);[m
[32m+[m[32m            _currentUnit.runAnimation(BattleActions.Move, path, OnMoveAnimationCompleted);[m
             _grid.playerLock("TileClicked.");[m
             /* BLOCKED FOR ANIMATION CODING[m
              * CHANGE AFTERWARDS[m
[36m@@ -242,4 +249,13 @@[m [mpublic class BattleControl: MonoBehaviour, IBattleControlAI {[m
             return !_currentUnit.hasMoved;[m
         }[m
     }[m
[32m+[m
[32m+[m[32m    /// <summary>[m
[32m+[m[32m    /// Fetchs node at given position[m
[32m+[m[32m    /// </summary>[m
[32m+[m[32m    /// <param name="target"></param>[m
[32m+[m[32m    /// <returns></returns>[m
[32m+[m[32m    public AStarNode GetNode(Vector2Int target) {[m
[32m+[m[32m        return _astar.GetNode(target);[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/CombatTestScene.unity b/Fallout Rpg/Assets/Scripts/Battle/CombatTestScene.unity[m
[1mindex 3defedf..671feb0 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/CombatTestScene.unity[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/CombatTestScene.unity[m	
[36m@@ -346,6 +346,7 @@[m [mMonoBehaviour:[m
   greenTile: {r: 0, g: 1, b: .00689649582, a: 0}[m
   purpleTile: {r: 1, g: 0, b: .88965559, a: 0}[m
   orangeFadedTile: {r: 1, g: .752535462, b: .102941155, a: .477999985}[m
[32m+[m[32m  debugSideTile: {r: 0, g: 0, b: 0, a: 0}[m
   hexRotation: {x: 90, y: 0, z: 0}[m
   hexScale: {x: 60, y: 60, z: .0299999993}[m
 --- !u!114 &938516471[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/AStar.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/AStar.cs[m
[1mindex 2d4c38d..b1af790 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/AStar.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/AStar.cs[m	
[36m@@ -18,15 +18,22 @@[m [mpublic class AStar: IAStarAI {[m
     private AStarNode[,] map;[m
     private int _mapWidth;[m
     private int _mapHeight;[m
[31m-    private Orientation _orientation;[m
[32m+[m[32m    private CellShape _cellShape;[m
 [m
[31m-    public AStar(int mapHeight, int mapWidth, Orientation orientation, AStarNode[,] map = null) {[m
[32m+[m[32m    /// <summary>[m
[32m+[m[32m    /// Construtor for pathfinding system, compatible with square and hex(pointy and flat) based grids[m
[32m+[m[32m    /// </summary>[m
[32m+[m[32m    /// <param name="mapHeight">Amount of cells from bottom to top</param>[m
[32m+[m[32m    /// <param name="mapWidth">Amount of cells from left to right</param>[m
[32m+[m[32m    /// <param name="cellShape">Shape of the cell</param>[m
[32m+[m[32m    /// <param name="map">Use a pre-created file map</param>[m
[32m+[m[32m    public AStar(int mapHeight, int mapWidth, CellShape cellShape, AStarNode[,] map = null) {[m
         _mapHeight = mapHeight;[m
         _mapWidth = mapWidth;[m
         _openList = new List<AStarNode>();[m
         _closedList = new List<AStarNode>();[m
[31m-        _orientation = orientation;[m
[31m-        if (orientation == Orientation.Square) {[m
[32m+[m[32m        _cellShape = cellShape;[m
[32m+[m[32m        if (cellShape == CellShape.Square) {[m
             this.map = new AStarNode[_mapHeight, _mapWidth];[m
             for (int i = 0; i < _mapHeight; i++) {[m
                 for (int j = 0; j < _mapWidth; j++) {[m
[36m@@ -43,15 +50,19 @@[m [mpublic class AStar: IAStarAI {[m
         }[m
 [m
     }[m
[31m-    [m
[32m+[m
[32m+[m[32m    /// <summary>[m
[32m+[m[32m    /// Builds the A* links cell by cell[m
[32m+[m[32m    /// Could probably use optimizing[m
[32m+[m[32m    /// </summary>[m
     public void generateMap() {[m
         //int c = 0; //why was this here?[m
         AStarNode n;[m
 [m
 [m
         List<AStarNode> sides = new List<AStarNode>();[m
[31m-        switch (_orientation) {[m
[31m-            case Orientation.Square:[m
[32m+[m[32m        switch (_cellShape) {[m
[32m+[m[32m            case CellShape.Square:[m
                 #region square[m
                 for (int i = 0; i < _mapWidth; i++) {[m
                     for (int j = 0; j < _mapHeight; j++) {[m
[36m@@ -75,7 +86,7 @@[m [mpublic class AStar: IAStarAI {[m
                 #endregion[m
                 break;[m
 [m
[31m-            case Orientation.Flat:[m
[32m+[m[32m            case CellShape.Flat:[m
                 #region flat[m
                 for (int i = 0; i < _mapWidth; i++) {[m
                     for (int j = 0; j < _mapHeight; j++) {[m
[36m@@ -114,31 +125,34 @@[m [mpublic class AStar: IAStarAI {[m
                 #endregion[m
                 break;[m
 [m
[31m-            case Orientation.Pointy:[m
[32m+[m[32m            case CellShape.Pointy:[m
                 #region pointy[m
                 for (int i = 0; i < _mapWidth; i++) {[m
                     for (int j = 0; j < _mapHeight; j++) {[m
                         n = this.map[i, j];[m
 [m
[31m-                        if (j + 1 < _mapHeight) {[m
[31m-                            //NE[m
[32m+[m[32m                        if (j + 1 < _mapHeight) { //north[m
                             sides.Add(this.map[i, j + 1]);[m
 [m
[31m-                            //NW[m
[31m-                            if (i + 1 < _mapWidth)[m
[32m+[m[32m                            if (j % 2 == 0) {[m
[32m+[m[32m                                if (i - 1 >= 0)[m
[32m+[m[32m                                    sides.Add(this.map[i - 1, j + 1]);[m
[32m+[m[32m                            } else if (i + 1 < _mapWidth)[m
                                 sides.Add(this.map[i + 1, j + 1]);[m
                         }[m
 [m
[31m-                        //W[m
[31m-                        if (i - 1 >= 0)[m
[32m+[m
[32m+[m[32m                        if (i - 1 >= 0) //W[m
                             sides.Add(this.map[i - 1, j]);[m
 [m
[31m-                        if (j - 1 >= 0) {[m
[31m-                            //SE[m
[32m+[m
[32m+[m[32m                        if (j - 1 >= 0) { //south[m
                             sides.Add(this.map[i, j - 1]);[m
[32m+[m[32m                            if (j % 2 == 0) {[m
[32m+[m[32m                                if (i - 1 >= 0)[m
[32m+[m[32m                                    sides.Add(this.map[i - 1, j - 1]);[m
 [m
[31m-                            //SW[m
[31m-                            if (i + 1 < _mapWidth)[m
[32m+[m[32m                            } else if (i + 1 < _mapWidth)[m
                                 sides.Add(this.map[i + 1, j - 1]);[m
                         }[m
 [m
[36m@@ -150,11 +164,6 @@[m [mpublic class AStar: IAStarAI {[m
                         sides.Clear();[m
                     }[m
                 }[m
[31m-                n = this.map[0, 9];[m
[31m-                Debug.Log(n.Sides.Length);[m
[31m-                for (int i = 0; i < n.Sides.Length; i++) {[m
[31m-                    [m
[31m-                }[m
                 #endregion[m
                 break;[m
         }[m
[36m@@ -307,8 +316,6 @@[m [mpublic class AStar: IAStarAI {[m
     }[m
 [m
     public List<Vector2Int> fetchOpenPositionsByArea(AStarNode node, int radius, bool includeStart) {[m
[31m-        Debug.Log(node.Position + " " + radius);[m
[31m-        Debug.Log(mapToString());[m
         clearTempData();[m
         _openList.Add(node);[m
         int nodeRadius = 0;[m
[36m@@ -320,7 +327,6 @@[m [mpublic class AStar: IAStarAI {[m
             _openList.Remove(_checkingNode);[m
             _closedList.Add(_checkingNode);[m
             nodeRadius = ++_checkingNode.h;[m
[31m-            Debug.Log(nodeRadius <= radius);[m
             if (nodeRadius <= radius) {[m
                 AStarNode[] sides = _checkingNode.Sides;[m
                 for (int i = 0; i < sides.Length; i++) {[m
[36m@@ -416,7 +422,10 @@[m [mpublic class AStar: IAStarAI {[m
     }[m
 }[m
 [m
[31m-public enum Orientation {[m
[32m+[m[32m/// <summary>[m
[32m+[m[32m/// Defines the shape of the cell in the A* system[m
[32m+[m[32m/// </summary>[m
[32m+[m[32mpublic enum CellShape {[m
     /// <summary>[m
     /// Regular square[m
     /// </summary>[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/Unit.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/Unit.cs[m
[1mindex d68699d..6a0d163 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/Unit.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/AI/Unit.cs[m	
[36m@@ -17,6 +17,10 @@[m [mpublic class Unit: MonoBehaviour, IUnitMovement {[m
 [m
     public AStarNode node;[m
 [m
[32m+[m[32m    public delegate void OnMoveAnimationCompletedEvent();[m
[32m+[m[32m    public OnMoveAnimationCompletedEvent onMoveAnimationCompleted;[m
[32m+[m[32m    private OnMoveAnimationCompletedEvent removeMeOnNextCall;[m
[32m+[m
     public void init(int movementRate, Faction faction, bool playerControlable) {[m
         _moveRate = movementRate;[m
         _playerControlable = playerControlable;[m
[36m@@ -72,12 +76,14 @@[m [mpublic class Unit: MonoBehaviour, IUnitMovement {[m
         enabled = false;[m
     }[m
 [m
[31m-    public void runAnimation(BattleActions action, List<Vector2Int> path) {[m
[32m+[m[32m    public void runAnimation(BattleActions action, List<Vector2Int> path, OnMoveAnimationCompletedEvent func) {[m
         //Debug.Log("Animation requested.");[m
         _ba = action;[m
         _path = path;[m
         switch (action) {[m
             case BattleActions.Move:[m
[32m+[m[32m                onMoveAnimationCompleted += func;[m
[32m+[m[32m                removeMeOnNextCall += func;[m
                 _ums.begin(_path);[m
                 break;[m
             default:[m
[36m@@ -88,6 +94,9 @@[m [mpublic class Unit: MonoBehaviour, IUnitMovement {[m
 [m
     public void movementDone() {[m
         _hasMoved = true;[m
[32m+[m[32m        onMoveAnimationCompleted();[m
[32m+[m[32m        onMoveAnimationCompleted -= removeMeOnNextCall;[m
[32m+[m[32m        removeMeOnNextCall = null;[m
     }[m
 [m
     public void resetAP() {[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridPainter.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridPainter.cs[m
[1mindex c51ec4a..a34dc11 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridPainter.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridPainter.cs[m	
[36m@@ -16,7 +16,7 @@[m [mpublic class GridPainter: MonoBehaviour {[m
 [m
     void Start() {[m
         createMat();[m
[31m-        /*Board b = new Board(10,10,30, Orientation.Flat);[m
[32m+[m[32m        /*Board b = new Board(10,10,30, CellShape.Flat);[m
         GraphicsEngine gfxe = new GraphicsEngine(b, 0, 0);[m
         gfxe.Draw();*/[m
     }[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridSquareMouseOver.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridSquareMouseOver.cs[m
[1mindex a30325e..c47f87f 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridSquareMouseOver.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/GridSquareMouseOver.cs[m	
[36m@@ -33,6 +33,7 @@[m [mpublic class GridSquareMouseOver: MonoBehaviour {[m
     public Color greenTile;[m
     public Color purpleTile;[m
     public Color orangeFadedTile;[m
[32m+[m[32m    public Color debugSideTile;[m
     public Vector3 hexRotation;[m
     public Vector3 hexScale;[m
 [m
[36m@@ -83,6 +84,7 @@[m [mpublic class GridSquareMouseOver: MonoBehaviour {[m
         setPosition(); //grabs the m_x,m_y position compatible with A*[m
         if (_playerAct) {   //is player turn[m
             if (mouseOnBoard) {[m
[32m+[m[32m                debugAstarTileLink();[m
                 if (_mousePosition.ContainedBy(allowedTiles)) { //within unit range of movement[m
 [m
                     if (battleCommand.canCurrentUnitMove)[m
[36m@@ -112,6 +114,26 @@[m [mpublic class GridSquareMouseOver: MonoBehaviour {[m
 [m
     }[m
 [m
[32m+[m[32m    /// <summary>[m
[32m+[m[32m    /// Call to display AStarNode.sides visually, debug use only[m
[32m+[m[32m    /// </summary>[m
[32m+[m[32m    private void debugAstarTileLink() {[m
[32m+[m[32m        massTileClear("debugSideTile");[m
[32m+[m[32m        if (_targetTile.x < _grid.width && _targetTile.y < _grid.height && _targetTile.x >= 0 && _targetTile.y >= 0) {[m
[32m+[m[32m            AStarNode asn = battleCommand.GetNode(_targetTile);[m
[32m+[m[32m            if (asn != null) {[m
[32m+[m[32m                AStarNode[] n = asn.Sides;[m
[32m+[m[32m                Vector2Int v;[m
[32m+[m[32m                for (int i = 0; i < n.Length; i++) {[m
[32m+[m[32m                    v = n[i].Position;[m
[32m+[m[32m                    hexSpawn(debugSideTile, "debugSideTile", new Vector3(v.x, 0.01f, v.y));[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                Debug.LogError("Null node detected " + _targetTile);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
 [m
 [m
     public List<Vector2Int> findpath() {[m
[36m@@ -216,10 +238,10 @@[m [mpublic class GridSquareMouseOver: MonoBehaviour {[m
             container = _tileDict[name];[m
         else[m
             _tileDict.Add(name, container = new List<Transform>());[m
[31m-        if (_grid.orientation == Orientation.Flat) {[m
[32m+[m[32m        if (_grid.orientation == CellShape.Flat) {[m
             if (v3.x % 2 != 0)[m
                 v3.z += 0.5f;[m
[31m-        } else if (_grid.orientation == Orientation.Pointy) {[m
[32m+[m[32m        } else if (_grid.orientation == CellShape.Pointy) {[m
             if (v3.z % 2 != 0)[m
                 v3.x += 0.5f;[m
         }[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/HexGrid.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/HexGrid.cs[m
[1mindex b755986..0c7e6bf 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/HexGrid.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/HexGrid.cs[m	
[36m@@ -12,7 +12,7 @@[m [mpublic class HexGrid: MonoBehaviour {[m
     private float pixelHeight;[m
 [m
     public GameObject target;[m
[31m-    public Orientation orientation;[m
[32m+[m[32m    public CellShape orientation;[m
     public int width;[m
     public int height;[m
     public float side;[m
[36m@@ -37,13 +37,13 @@[m [mpublic class HexGrid: MonoBehaviour {[m
         float hexWidth = 0;[m
         float hexHeight = 0;[m
         switch (orientation) {[m
[31m-            case Orientation.Flat:[m
[32m+[m[32m            case CellShape.Flat:[m
                 hexWidth = side + h;[m
                 hexHeight = r + r;[m
                 this.pixelWidth = (width * hexWidth) + h;[m
                 this.pixelHeight = (height * hexHeight) + r;[m
                 break;[m
[31m-            case Orientation.Pointy:[m
[32m+[m[32m            case CellShape.Pointy:[m
                 hexWidth = r + r;[m
                 hexHeight = side + h;[m
                 this.pixelWidth = (width * hexWidth) + r;[m
[36m@@ -125,10 +125,10 @@[m [mpublic class HexGrid: MonoBehaviour {[m
                 if (isTopLeft) {[m
                     //First hex[m
                     switch (orientation) {[m
[31m-                        case Orientation.Flat:[m
[32m+[m[32m                        case CellShape.Flat:[m
                             hexes[0, 0] = new Hex(0 + h + xOffset, 0 + yOffset, side, orientation, new Vector2Int(0,0));[m
                             break;[m
[31m-                        case Orientation.Pointy:[m
[32m+[m[32m                        case CellShape.Pointy:[m
                             hexes[0, 0] = new Hex(0 + r + xOffset, 0 + yOffset, side, orientation, new Vector2Int(0, 0));[m
                             break;[m
                         default:[m
[36m@@ -139,7 +139,7 @@[m [mpublic class HexGrid: MonoBehaviour {[m
 [m
                 } else {[m
                     switch (orientation) {[m
[31m-                        case Orientation.Flat:[m
[32m+[m[32m                        case CellShape.Flat:[m
                             if (inLeftColumn) {[m
                                 // Calculate from hex above[m
                                 hexes[i, j] = new Hex(hexes[i - 1, j].Points[(int)FlatVertice.BottomLeft], side, orientation, new Vector2Int(i, j));[m
[36m@@ -158,7 +158,7 @@[m [mpublic class HexGrid: MonoBehaviour {[m
                                 }[m
                             }[m
                             break;[m
[31m-                        case Orientation.Pointy:[m
[32m+[m[32m                        case CellShape.Pointy:[m
                             if (inLeftColumn) {[m
                                 // Calculate from hex above and need to stagger the weakRows[m
                                 if (i % 2 == 0) {[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/Battle/GridMap/Hexagonal/Hex.cs b/Fallout Rpg/Assets/Scripts/Battle/GridMap/Hexagonal/Hex.cs[m
[1mindex 641b7b6..0299e68 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/Battle/GridMap/Hexagonal/Hex.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/Battle/GridMap/Hexagonal/Hex.cs[m	
[36m@@ -7,27 +7,27 @@[m [mpublic class Hex : AStarNode {[m
     private float m_side;[m
     private float m_h;[m
     private float m_r;[m
[31m-    private Orientation m_orientation;[m
[32m+[m[32m    private CellShape m_orientation;[m
     private float m_x;[m
     private float m_y;[m
 [m
     /// <param name="m_side">length of one m_side of the hexagon</param>[m
[31m-    public Hex(int x, int y, int side, Orientation orientation, Vector2Int pos) : base(pos, 6) {[m
[32m+[m[32m    public Hex(int x, int y, int side, CellShape orientation, Vector2Int pos) : base(pos, 6) {[m
         Initialize((float)x, (float)y, (float)side, orientation);[m
     }[m
 [m
[31m-    public Hex(float x, float y, float side, Orientation orientation, Vector2Int pos) : base(pos, 6) {[m
[32m+[m[32m    public Hex(float x, float y, float side, CellShape orientation, Vector2Int pos) : base(pos, 6) {[m
         Initialize(x, y, side, orientation);[m
     }[m
 [m
[31m-    public Hex(Vector2 point, float side, Orientation orientation, Vector2Int pos) : base(pos, 6) {[m
[32m+[m[32m    public Hex(Vector2 point, float side, CellShape orientation, Vector2Int pos) : base(pos, 6) {[m
         Initialize(point.x, point.y, side, orientation);[m
     }[m
 [m
     /// <summary>[m
     /// Sets internal fields and calls CalculateVertices()[m
     /// </summary>[m
[31m-    private void Initialize(float x, float y, float side, Orientation orientation) {[m
[32m+[m[32m    private void Initialize(float x, float y, float side, CellShape orientation) {[m
         this.m_x = x;[m
         this.m_y = y;[m
         this.m_side = side;[m
[36m@@ -72,7 +72,7 @@[m [mpublic class Hex : AStarNode {[m
         m_r = HexMath.CalculateR(m_side);[m
 [m
         switch (m_orientation) {[m
[31m-            case Orientation.Flat:[m
[32m+[m[32m            case CellShape.Flat:[m
                 // m_x,m_y coordinates are top left point[m
                 m_points = new Vector2[6];[m
                 m_points[0] = new Vector2(m_x, m_y);[m
[36m@@ -82,7 +82,7 @@[m [mpublic class Hex : AStarNode {[m
                 m_points[4] = new Vector2(m_x, m_y + m_r + m_r);[m
                 m_points[5] = new Vector2(m_x - m_h, m_y + m_r);[m
                 break;[m
[31m-            case Orientation.Pointy:[m
[32m+[m[32m            case CellShape.Pointy:[m
                 //m_x,m_y coordinates are top center point[m
                 m_points = new Vector2[6];[m
                 m_points[0] = new Vector2(m_x, m_y);[m
[36m@@ -93,13 +93,13 @@[m [mpublic class Hex : AStarNode {[m
                 m_points[5] = new Vector2(m_x - m_r, m_y + m_h);[m
                 break;[m
             default:[m
[31m-                throw new Exception("No Orientation defined for Hex object.");[m
[32m+[m[32m                throw new Exception("No CellShape defined for Hex object.");[m
 [m
         }[m
 [m
     }[m
 [m
[31m-    public Orientation Orientation {[m
[32m+[m[32m    public CellShape Orientation {[m
         get {[m
             return m_orientation;[m
         }[m
[1mdiff --git a/Fallout Rpg/Assets/Scripts/plugins/SimpleSmoothMouseLook.cs b/Fallout Rpg/Assets/Scripts/plugins/SimpleSmoothMouseLook.cs[m
[1mindex 01fc565..61866c6 100644[m
[1m--- a/Fallout Rpg/Assets/Scripts/plugins/SimpleSmoothMouseLook.cs[m	
[1m+++ b/Fallout Rpg/Assets/Scripts/plugins/SimpleSmoothMouseLook.cs[m	
[36m@@ -23,7 +23,7 @@[m [mpublic class SimpleSmoothMouseLook : MonoBehaviour[m
  [m
     void Start()[m
     {[m
[31m-        // Set target direction to the camera's initial orientation.[m
[32m+[m[32m        // Set target direction to the camera's initial cellShape.[m
         targetDirection = transform.localRotation.eulerAngles;[m
  [m
         // Set target direction for the character body to its inital state.[m
[1mdiff --git a/Fallout Rpg/Assets/sshTest.txt.meta b/Fallout Rpg/Assets/sshTest.txt.meta[m
[1mindex da8b32c..59a58f4 100644[m
[1m--- a/Fallout Rpg/Assets/sshTest.txt.meta[m	
[1m+++ b/Fallout Rpg/Assets/sshTest.txt.meta[m	
[36m@@ -1,6 +1,10 @@[m
 fileFormatVersion: 2[m
 guid: 0ae9b86f646823e42abe8a8d068ad4e5[m
[32m+[m[32m<<<<<<< HEAD[m
 timeCreated: 1437633512[m
[32m+[m[32m=======[m
[32m+[m[32mtimeCreated: 1437402166[m
[32m+[m[32m>>>>>>> Working A* needs adjustment in unit position #8[m
 licenseType: Free[m
 TextScriptImporter:[m
   userData: [m
